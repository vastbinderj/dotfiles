{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "dataproc:v1",
  "name": "dataproc",
  "version": "v1",
  "revision": "0",
  "title": "Google Cloud Dataproc API",
  "description": "Manages Hadoop-based clusters and jobs on Google Cloud Platform.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/dataproc/",
  "protocol": "rest",
  "rootUrl": "https://dataproc.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://dataproc.googleapis.com/",
  "batchPath": "batch",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "bearer_token": {
      "type": "string",
      "description": "OAuth bearer token.",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "pp": {
      "type": "boolean",
      "description": "Pretty-print response.",
      "default": "true",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should have the format of operations\/some\/unique\/name.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get\/Create\/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https:\/\/github.com\/grpc). The error model is designed to be:\nSimple to use and understand for most users\nFlexible enough to meet unexpected needsOverviewThe Status message contains three pieces of data: error code, error message, and error details. The error code should be an enum value of google.rpc.Code, but it may accept additional error codes if needed. The error message should be a developer-facing English message that helps developers understand and resolve the error. If a localized user-facing error message is needed, put the localized message in the error details or localize it in the client. The optional error details may contain arbitrary information about the error. There is a predefined set of error detail types in the package google.rpc which can be used for common error conditions.Language mappingThe Status message is the logical representation of the error model, but it is not necessarily the actual wire format. When the Status message is exposed in different client libraries and different wire protocols, it can be mapped differently. For example, it will likely be mapped to some exceptions in Java, but more likely mapped to some error codes in C.Other usesThe error model and the Status message can be used in a variety of environments, either with or without APIs, to provide a consistent developer experience across different environments.Example uses of this error model include:\nPartial errors. If a service needs to return partial errors to the client, it may embed the Status in the normal response to indicate the partial errors.\nWorkflow errors. A typical workflow has multiple steps. Each step may have a Status message for error reporting purpose.\nBatch operations. If a client uses batch request and batch response, the Status message should be used directly inside batch response, one for each error sub-response.\nAsynchronous operations. If an API call embeds asynchronous operation results in its response, the status of those operations should be represented directly using the Status message.\nLogging. If some API errors are stored in logs, the message Status could be used directly after any stripping needed for security\/privacy reasons.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There will be a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:\nservice Foo {\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n}\nThe JSON representation for Empty is empty JSON object {}.",
      "type": "object",
      "properties": {
      }
    },
    "Cluster": {
      "id": "Cluster",
      "description": "Describes the identifying information, config, and status of a cluster of Google Compute Engine instances.",
      "type": "object",
      "properties": {
        "projectId": {
          "description": "Required The Google Cloud Platform project ID that the cluster belongs to.",
          "type": "string"
        },
        "clusterName": {
          "description": "Required The cluster name. Cluster names within a project must be unique. Names of deleted clusters can be reused.",
          "type": "string"
        },
        "config": {
          "description": "Required The cluster config. Note that Cloud Dataproc may set default values, and values may change when clusters are updated.",
          "$ref": "ClusterConfig"
        },
        "labels": {
          "description": "Optional The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https:\/\/www.ietf.org\/rfc\/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https:\/\/www.ietf.org\/rfc\/rfc1035.txt). No more than 32 labels can be associated with a cluster.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "status": {
          "description": "Output-only Cluster status.",
          "$ref": "ClusterStatus"
        },
        "statusHistory": {
          "description": "Output-only The previous cluster status.",
          "type": "array",
          "items": {
            "$ref": "ClusterStatus"
          }
        },
        "clusterUuid": {
          "description": "Output-only A cluster UUID (Unique Universal Identifier). Cloud Dataproc generates this value when it creates the cluster.",
          "type": "string"
        },
        "metrics": {
          "description": "Contains cluster daemon metrics such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.",
          "$ref": "ClusterMetrics"
        }
      }
    },
    "ClusterConfig": {
      "id": "ClusterConfig",
      "description": "The cluster config.",
      "type": "object",
      "properties": {
        "configBucket": {
          "description": "Optional A Google Cloud Storage staging bucket used for sharing generated SSH keys and config. If you do not specify a staging bucket, Cloud Dataproc will determine an appropriate Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Google Compute Engine zone where your cluster is deployed, and then it will create and manage this project-level, per-location bucket for you.",
          "type": "string"
        },
        "gceClusterConfig": {
          "description": "Required The shared Google Compute Engine config settings for all instances in a cluster.",
          "$ref": "GceClusterConfig"
        },
        "masterConfig": {
          "description": "Optional The Google Compute Engine config settings for the master instance in a cluster.",
          "$ref": "InstanceGroupConfig"
        },
        "workerConfig": {
          "description": "Optional The Google Compute Engine config settings for worker instances in a cluster.",
          "$ref": "InstanceGroupConfig"
        },
        "secondaryWorkerConfig": {
          "description": "Optional The Google Compute Engine config settings for additional worker instances in a cluster.",
          "$ref": "InstanceGroupConfig"
        },
        "softwareConfig": {
          "description": "Optional The config settings for software inside the cluster.",
          "$ref": "SoftwareConfig"
        },
        "initializationActions": {
          "description": "Optional Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's <code>role<\/code> metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget):\nROLE=$(curl -H Metadata-Flavor:Google http:\/\/metadata\/computeMetadata\/v1\/instance\/attributes\/dataproc-role)\nif [[ \"${ROLE}\" == 'Master' ]]; then\n  ... master specific actions ...\nelse\n  ... worker specific actions ...\nfi\n",
          "type": "array",
          "items": {
            "$ref": "NodeInitializationAction"
          }
        }
      }
    },
    "GceClusterConfig": {
      "id": "GceClusterConfig",
      "description": "Common config settings for resources of Google Compute Engine cluster instances, applicable to all instances in the cluster.",
      "type": "object",
      "properties": {
        "zoneUri": {
          "description": "Required The zone where the Google Compute Engine cluster will be located. Example: https:\/\/www.googleapis.com\/compute\/v1\/projects\/[project_id]\/zones\/[zone].",
          "type": "string"
        },
        "networkUri": {
          "description": "Optional The Google Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the \"default\" network of the project is used, if it exists. Cannot be a \"Custom Subnet Network\" (see Using Subnetworks for more information). Example: https:\/\/www.googleapis.com\/compute\/v1\/projects\/[project_id]\/regions\/global\/default.",
          "type": "string"
        },
        "subnetworkUri": {
          "description": "Optional The Google Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri. Example: https:\/\/www.googleapis.com\/compute\/v1\/projects\/[project_id]\/regions\/us-east1\/sub0.",
          "type": "string"
        },
        "internalIpOnly": {
          "description": "Optional If true, all instances in the cluster will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This internal_ip_only restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses.",
          "type": "boolean"
        },
        "serviceAccount": {
          "description": "Optional The service account of the instances. Defaults to the default Google Compute Engine service account. Custom service accounts need permissions equivalent to the folloing IAM roles:\nroles\/logging.logWriter\nroles\/storage.objectAdmin(see https:\/\/cloud.google.com\/compute\/docs\/access\/service-accounts#custom_service_accounts for more information). Example: [account_id]@[project_id].iam.gserviceaccount.com",
          "type": "string"
        },
        "serviceAccountScopes": {
          "description": "Optional The URIs of service account scopes to be included in Google Compute Engine instances. The following base set of scopes is always included:\nhttps:\/\/www.googleapis.com\/auth\/cloud.useraccounts.readonly\nhttps:\/\/www.googleapis.com\/auth\/devstorage.read_write\nhttps:\/\/www.googleapis.com\/auth\/logging.writeIf no scopes are specified, the following defaults are also provided:\nhttps:\/\/www.googleapis.com\/auth\/bigquery\nhttps:\/\/www.googleapis.com\/auth\/bigtable.admin.table\nhttps:\/\/www.googleapis.com\/auth\/bigtable.data\nhttps:\/\/www.googleapis.com\/auth\/devstorage.full_control",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "description": "The Google Compute Engine tags to add to all instances (see Tagging instances).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "The Google Compute Engine metadata entries to add to all instances (see Project and instance metadata (https:\/\/cloud.google.com\/compute\/docs\/storing-retrieving-metadata#project_and_instance_metadata)).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "InstanceGroupConfig": {
      "id": "InstanceGroupConfig",
      "description": "Optional The config settings for Google Compute Engine resources in an instance group, such as a master or worker group.",
      "type": "object",
      "properties": {
        "numInstances": {
          "description": "Required The number of VM instances in the instance group. For master instance groups, must be set to 1.",
          "type": "integer",
          "format": "int32"
        },
        "instanceNames": {
          "description": "Optional The list of instance names. Cloud Dataproc derives the names from cluster_name, num_instances, and the instance group if not set by user (recommended practice is to let Cloud Dataproc derive the name).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "imageUri": {
          "description": "Output-only The Google Compute Engine image resource used for cluster instances. Inferred from SoftwareConfig.image_version.",
          "type": "string"
        },
        "machineTypeUri": {
          "description": "Required The Google Compute Engine machine type used for cluster instances. Example: https:\/\/www.googleapis.com\/compute\/v1\/projects\/[project_id]\/zones\/us-east1-a\/machineTypes\/n1-standard-2.",
          "type": "string"
        },
        "diskConfig": {
          "description": "Optional Disk option config settings.",
          "$ref": "DiskConfig"
        },
        "isPreemptible": {
          "description": "Optional Specifies that this instance group contains preemptible instances.",
          "type": "boolean"
        },
        "managedGroupConfig": {
          "description": "Output-only The config for Google Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.",
          "$ref": "ManagedGroupConfig"
        },
        "accelerators": {
          "description": "Optional The Google Compute Engine accelerator configuration for these instances.Beta Feature: This feature is still under development. It may be changed before final release.",
          "type": "array",
          "items": {
            "$ref": "AcceleratorConfig"
          }
        }
      }
    },
    "DiskConfig": {
      "id": "DiskConfig",
      "description": "Specifies the config of disk options for a group of VM instances.",
      "type": "object",
      "properties": {
        "bootDiskSizeGb": {
          "description": "Optional Size in GB of the boot disk (default is 500GB).",
          "type": "integer",
          "format": "int32"
        },
        "numLocalSsds": {
          "description": "Optional Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https:\/\/hadoop.apache.org\/docs\/r1.2.1\/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ManagedGroupConfig": {
      "id": "ManagedGroupConfig",
      "description": "Specifies the resources used to actively manage an instance group.",
      "type": "object",
      "properties": {
        "instanceTemplateName": {
          "description": "Output-only The name of the Instance Template used for the Managed Instance Group.",
          "type": "string"
        },
        "instanceGroupManagerName": {
          "description": "Output-only The name of the Instance Group Manager for this group.",
          "type": "string"
        }
      }
    },
    "AcceleratorConfig": {
      "id": "AcceleratorConfig",
      "description": "Specifies the type and number of accelerator cards attached to the instances of an instance group (see GPUs on Compute Engine).",
      "type": "object",
      "properties": {
        "acceleratorTypeUri": {
          "description": "Full or partial URI of the accelerator type resource to expose to this instance. See Google Compute Engine AcceleratorTypes( \/compute\/docs\/reference\/beta\/acceleratorTypes)",
          "type": "string"
        },
        "acceleratorCount": {
          "description": "The number of the accelerator cards of this type exposed to this instance.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SoftwareConfig": {
      "id": "SoftwareConfig",
      "description": "Specifies the selection and config of software inside the cluster.",
      "type": "object",
      "properties": {
        "imageVersion": {
          "description": "Optional The version of software inside the cluster. It must match the regular expression [0-9]+\\.[0-9]+. If unspecified, it defaults to the latest version (see Cloud Dataproc Versioning).",
          "type": "string"
        },
        "properties": {
          "description": "Optional The properties to set on daemon config files.Property keys are specified in prefix:property format, such as core:fs.defaultFS. The following are supported prefixes and their mappings:\ncore: core-site.xml\nhdfs: hdfs-site.xml\nmapred: mapred-site.xml\nyarn: yarn-site.xml\nhive: hive-site.xml\npig: pig.properties\nspark: spark-defaults.conf",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "NodeInitializationAction": {
      "id": "NodeInitializationAction",
      "description": "Specifies an executable to run on a fully configured node and a timeout period for executable completion.",
      "type": "object",
      "properties": {
        "executableFile": {
          "description": "Required Google Cloud Storage URI of executable file.",
          "type": "string"
        },
        "executionTimeout": {
          "description": "Optional Amount of time executable has to complete. Default is 10 minutes. Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.",
          "type": "string",
          "format": "google-duration"
        }
      }
    },
    "ClusterStatus": {
      "id": "ClusterStatus",
      "description": "The status of a cluster and its instances.",
      "type": "object",
      "properties": {
        "state": {
          "description": "Output-only The cluster's state.",
          "enumDescriptions": [
            "The cluster state is unknown.",
            "The cluster is being created and set up. It is not ready for use.",
            "The cluster is currently running and healthy. It is ready for use.",
            "The cluster encountered an error. It is not ready for use.",
            "The cluster is being deleted. It cannot be used.",
            "The cluster is being updated. It continues to accept and process jobs."
          ],
          "type": "string",
          "enum": [
            "UNKNOWN",
            "CREATING",
            "RUNNING",
            "ERROR",
            "DELETING",
            "UPDATING"
          ]
        },
        "detail": {
          "description": "Output-only Optional details of cluster's state.",
          "type": "string"
        },
        "stateStartTime": {
          "description": "Output-only Time when this state was entered.",
          "type": "string",
          "format": "google-datetime"
        },
        "substate": {
          "description": "Output-only Additional state information that includes status reported by the agent.",
          "enumDescriptions": [
            "",
            "The cluster is known to be in an unhealthy state (for example, critical daemons are not running or HDFS capacity is exhausted).Applies to RUNNING state.",
            "The agent-reported status is out of date (may occur if Cloud Dataproc loses communication with Agent).Applies to RUNNING state."
          ],
          "type": "string",
          "enum": [
            "UNSPECIFIED",
            "UNHEALTHY",
            "STALE_STATUS"
          ]
        }
      }
    },
    "ClusterMetrics": {
      "id": "ClusterMetrics",
      "description": "Contains cluster daemon metrics, such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.",
      "type": "object",
      "properties": {
        "hdfsMetrics": {
          "description": "The HDFS metrics.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        },
        "yarnMetrics": {
          "description": "The YARN metrics.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "ListClustersResponse": {
      "id": "ListClustersResponse",
      "description": "The list of all clusters in a project.",
      "type": "object",
      "properties": {
        "clusters": {
          "description": "Output-only The clusters in the project.",
          "type": "array",
          "items": {
            "$ref": "Cluster"
          }
        },
        "nextPageToken": {
          "description": "Output-only This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the page_token in a subsequent <code>ListClustersRequest<\/code>.",
          "type": "string"
        }
      }
    },
    "DiagnoseClusterRequest": {
      "id": "DiagnoseClusterRequest",
      "description": "A request to collect cluster diagnostic information.",
      "type": "object",
      "properties": {
      }
    },
    "SubmitJobRequest": {
      "id": "SubmitJobRequest",
      "description": "A request to submit a job.",
      "type": "object",
      "properties": {
        "job": {
          "description": "Required The job resource.",
          "$ref": "Job"
        }
      }
    },
    "Job": {
      "id": "Job",
      "description": "A Cloud Dataproc job resource.",
      "type": "object",
      "properties": {
        "reference": {
          "description": "Optional The fully qualified reference to the job, which can be used to obtain the equivalent REST path of the job resource. If this property is not specified when a job is created, the server generates a <code>job_id<\/code>.",
          "$ref": "JobReference"
        },
        "placement": {
          "description": "Required Job information, including how, when, and where to run the job.",
          "$ref": "JobPlacement"
        },
        "hadoopJob": {
          "description": "Job is a Hadoop job.",
          "$ref": "HadoopJob"
        },
        "sparkJob": {
          "description": "Job is a Spark job.",
          "$ref": "SparkJob"
        },
        "pysparkJob": {
          "description": "Job is a Pyspark job.",
          "$ref": "PySparkJob"
        },
        "hiveJob": {
          "description": "Job is a Hive job.",
          "$ref": "HiveJob"
        },
        "pigJob": {
          "description": "Job is a Pig job.",
          "$ref": "PigJob"
        },
        "sparkSqlJob": {
          "description": "Job is a SparkSql job.",
          "$ref": "SparkSqlJob"
        },
        "status": {
          "description": "Output-only The job status. Additional application-specific status information may be contained in the <code>type_job<\/code> and <code>yarn_applications<\/code> fields.",
          "$ref": "JobStatus"
        },
        "statusHistory": {
          "description": "Output-only The previous job status.",
          "type": "array",
          "items": {
            "$ref": "JobStatus"
          }
        },
        "yarnApplications": {
          "description": "Output-only The collection of YARN applications spun up by this job.Beta Feature: This report is available for testing purposes only. It may be changed before final release.",
          "type": "array",
          "items": {
            "$ref": "YarnApplication"
          }
        },
        "driverOutputResourceUri": {
          "description": "Output-only A URI pointing to the location of the stdout of the job's driver program.",
          "type": "string"
        },
        "driverControlFilesUri": {
          "description": "Output-only If present, the location of miscellaneous control files which may be used as part of job setup and handling. If not present, control files may be placed in the same location as driver_output_uri.",
          "type": "string"
        },
        "labels": {
          "description": "Optional The labels to associate with this job. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https:\/\/www.ietf.org\/rfc\/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https:\/\/www.ietf.org\/rfc\/rfc1035.txt). No more than 32 labels can be associated with a job.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "scheduling": {
          "description": "Optional Job scheduling configuration.",
          "$ref": "JobScheduling"
        }
      }
    },
    "JobReference": {
      "id": "JobReference",
      "description": "Encapsulates the full scoping used to reference a job.",
      "type": "object",
      "properties": {
        "projectId": {
          "description": "Required The ID of the Google Cloud Platform project that the job belongs to.",
          "type": "string"
        },
        "jobId": {
          "description": "Optional The job ID, which must be unique within the project. The job ID is generated by the server upon job submission or provided by the user as a means to perform retries without creating duplicate jobs. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or hyphens (-). The maximum length is 100 characters.",
          "type": "string"
        }
      }
    },
    "JobPlacement": {
      "id": "JobPlacement",
      "description": "Cloud Dataproc job config.",
      "type": "object",
      "properties": {
        "clusterName": {
          "description": "Required The name of the cluster where the job will be submitted.",
          "type": "string"
        },
        "clusterUuid": {
          "description": "Output-only A cluster UUID generated by the Cloud Dataproc service when the job is submitted.",
          "type": "string"
        }
      }
    },
    "HadoopJob": {
      "id": "HadoopJob",
      "description": "A Cloud Dataproc job for running Apache Hadoop MapReduce (https:\/\/hadoop.apache.org\/docs\/current\/hadoop-mapreduce-client\/hadoop-mapreduce-client-core\/MapReduceTutorial.html) jobs on Apache Hadoop YARN (https:\/\/hadoop.apache.org\/docs\/r2.7.1\/hadoop-yarn\/hadoop-yarn-site\/YARN.html).",
      "type": "object",
      "properties": {
        "mainJarFileUri": {
          "description": "The HCFS URI of the jar file containing the main class. Examples:  'gs:\/\/foo-bucket\/analytics-binaries\/extract-useful-metrics-mr.jar'  'hdfs:\/tmp\/test-samples\/custom-wordcount.jar'  'file:\/\/\/home\/usr\/lib\/hadoop-mapreduce\/hadoop-mapreduce-examples.jar'",
          "type": "string"
        },
        "mainClass": {
          "description": "The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.",
          "type": "string"
        },
        "args": {
          "description": "Optional The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jarFileUris": {
          "description": "Optional Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fileUris": {
          "description": "Optional HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "archiveUris": {
          "description": "Optional HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Optional A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in \/etc\/hadoop\/conf\/*-site and classes in user code.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "loggingConfig": {
          "description": "Optional The runtime log config for job execution.",
          "$ref": "LoggingConfig"
        }
      }
    },
    "LoggingConfig": {
      "id": "LoggingConfig",
      "description": "The runtime logging config of the job.",
      "type": "object",
      "properties": {
        "driverLogLevels": {
          "description": "The per-package log levels for the driver. This may include \"root\" package name to configure rootLogger. Examples:  'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "enum": [
              "LEVEL_UNSPECIFIED",
              "ALL",
              "TRACE",
              "DEBUG",
              "INFO",
              "WARN",
              "ERROR",
              "FATAL",
              "OFF"
            ]
          }
        }
      }
    },
    "SparkJob": {
      "id": "SparkJob",
      "description": "A Cloud Dataproc job for running Apache Spark (http:\/\/spark.apache.org\/) applications on YARN.",
      "type": "object",
      "properties": {
        "mainJarFileUri": {
          "description": "The HCFS URI of the jar file that contains the main class.",
          "type": "string"
        },
        "mainClass": {
          "description": "The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris.",
          "type": "string"
        },
        "args": {
          "description": "Optional The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jarFileUris": {
          "description": "Optional HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fileUris": {
          "description": "Optional HCFS URIs of files to be copied to the working directory of Spark drivers and distributed tasks. Useful for naively parallel tasks.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "archiveUris": {
          "description": "Optional HCFS URIs of archives to be extracted in the working directory of Spark drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Optional A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in \/etc\/spark\/conf\/spark-defaults.conf and classes in user code.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "loggingConfig": {
          "description": "Optional The runtime log config for job execution.",
          "$ref": "LoggingConfig"
        }
      }
    },
    "PySparkJob": {
      "id": "PySparkJob",
      "description": "A Cloud Dataproc job for running Apache PySpark (https:\/\/spark.apache.org\/docs\/0.9.0\/python-programming-guide.html) applications on YARN.",
      "type": "object",
      "properties": {
        "mainPythonFileUri": {
          "description": "Required The HCFS URI of the main Python file to use as the driver. Must be a .py file.",
          "type": "string"
        },
        "args": {
          "description": "Optional The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pythonFileUris": {
          "description": "Optional HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jarFileUris": {
          "description": "Optional HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fileUris": {
          "description": "Optional HCFS URIs of files to be copied to the working directory of Python drivers and distributed tasks. Useful for naively parallel tasks.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "archiveUris": {
          "description": "Optional HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Optional A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in \/etc\/spark\/conf\/spark-defaults.conf and classes in user code.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "loggingConfig": {
          "description": "Optional The runtime log config for job execution.",
          "$ref": "LoggingConfig"
        }
      }
    },
    "HiveJob": {
      "id": "HiveJob",
      "description": "A Cloud Dataproc job for running Apache Hive (https:\/\/hive.apache.org\/) queries on YARN.",
      "type": "object",
      "properties": {
        "queryFileUri": {
          "description": "The HCFS URI of the script that contains Hive queries.",
          "type": "string"
        },
        "queryList": {
          "description": "A list of queries.",
          "$ref": "QueryList"
        },
        "continueOnFailure": {
          "description": "Optional Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.",
          "type": "boolean"
        },
        "scriptVariables": {
          "description": "Optional Mapping of query variable names to values (equivalent to the Hive command: SET name=\"value\";).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Optional A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in \/etc\/hadoop\/conf\/*-site.xml, \/etc\/hive\/conf\/hive-site.xml, and classes in user code.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "jarFileUris": {
          "description": "Optional HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "QueryList": {
      "id": "QueryList",
      "description": "A list of queries to run on a cluster.",
      "type": "object",
      "properties": {
        "queries": {
          "description": "Required The queries to execute. You do not need to terminate a query with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of an Cloud Dataproc API snippet that uses a QueryList to specify a HiveJob:\n\"hiveJob\": {\n  \"queryList\": {\n    \"queries\": [\n      \"query1\",\n      \"query2\",\n      \"query3;query4\",\n    ]\n  }\n}\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PigJob": {
      "id": "PigJob",
      "description": "A Cloud Dataproc job for running Apache Pig (https:\/\/pig.apache.org\/) queries on YARN.",
      "type": "object",
      "properties": {
        "queryFileUri": {
          "description": "The HCFS URI of the script that contains the Pig queries.",
          "type": "string"
        },
        "queryList": {
          "description": "A list of queries.",
          "$ref": "QueryList"
        },
        "continueOnFailure": {
          "description": "Optional Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.",
          "type": "boolean"
        },
        "scriptVariables": {
          "description": "Optional Mapping of query variable names to values (equivalent to the Pig command: name=[value]).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Optional A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in \/etc\/hadoop\/conf\/*-site.xml, \/etc\/pig\/conf\/pig.properties, and classes in user code.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "jarFileUris": {
          "description": "Optional HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "loggingConfig": {
          "description": "Optional The runtime log config for job execution.",
          "$ref": "LoggingConfig"
        }
      }
    },
    "SparkSqlJob": {
      "id": "SparkSqlJob",
      "description": "A Cloud Dataproc job for running Apache Spark SQL (http:\/\/spark.apache.org\/sql\/) queries.",
      "type": "object",
      "properties": {
        "queryFileUri": {
          "description": "The HCFS URI of the script that contains SQL queries.",
          "type": "string"
        },
        "queryList": {
          "description": "A list of queries.",
          "$ref": "QueryList"
        },
        "scriptVariables": {
          "description": "Optional Mapping of query variable names to values (equivalent to the Spark SQL command: SET name=\"value\";).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Optional A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "jarFileUris": {
          "description": "Optional HCFS URIs of jar files to be added to the Spark CLASSPATH.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "loggingConfig": {
          "description": "Optional The runtime log config for job execution.",
          "$ref": "LoggingConfig"
        }
      }
    },
    "JobStatus": {
      "id": "JobStatus",
      "description": "Cloud Dataproc job status.",
      "type": "object",
      "properties": {
        "state": {
          "description": "Output-only A state message specifying the overall job state.",
          "enumDescriptions": [
            "The job state is unknown.",
            "The job is pending; it has been submitted, but is not yet running.",
            "Job has been received by the service and completed initial setup; it will soon be submitted to the cluster.",
            "The job is running on the cluster.",
            "A CancelJob request has been received, but is pending.",
            "Transient in-flight resources have been canceled, and the request to cancel the running job has been issued to the cluster.",
            "The job cancellation was successful.",
            "The job has completed successfully.",
            "The job has completed, but encountered an error.",
            "Job attempt has failed. The detail field contains failure details for this attempt.Applies to restartable jobs only."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "SETUP_DONE",
            "RUNNING",
            "CANCEL_PENDING",
            "CANCEL_STARTED",
            "CANCELLED",
            "DONE",
            "ERROR",
            "ATTEMPT_FAILURE"
          ]
        },
        "details": {
          "description": "Output-only Optional job state details, such as an error description if the state is <code>ERROR<\/code>.",
          "type": "string"
        },
        "stateStartTime": {
          "description": "Output-only The time when this state was entered.",
          "type": "string",
          "format": "google-datetime"
        },
        "substate": {
          "description": "Output-only Additional state information, which includes status reported by the agent.",
          "enumDescriptions": [
            "",
            "The Job is submitted to the agent.Applies to RUNNING state.",
            "The Job has been received and is awaiting execution (it may be waiting for a condition to be met). See the \"details\" field for the reason for the delay.Applies to RUNNING state.",
            "The agent-reported status is out of date, which may be caused by a loss of communication between the agent and Cloud Dataproc. If the agent does not send a timely update, the job will fail.Applies to RUNNING state."
          ],
          "type": "string",
          "enum": [
            "UNSPECIFIED",
            "SUBMITTED",
            "QUEUED",
            "STALE_STATUS"
          ]
        }
      }
    },
    "YarnApplication": {
      "id": "YarnApplication",
      "description": "A YARN application created by a job. Application information is a subset of <code>org.apache.hadoop.yarn.proto.YarnProtos.ApplicationReportProto<\/code>.Beta Feature: This report is available for testing purposes only. It may be changed before final release.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required The application name.",
          "type": "string"
        },
        "state": {
          "description": "Required The application state.",
          "enumDescriptions": [
            "Status is unspecified.",
            "Status is NEW.",
            "Status is NEW_SAVING.",
            "Status is SUBMITTED.",
            "Status is ACCEPTED.",
            "Status is RUNNING.",
            "Status is FINISHED.",
            "Status is FAILED.",
            "Status is KILLED."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "NEW",
            "NEW_SAVING",
            "SUBMITTED",
            "ACCEPTED",
            "RUNNING",
            "FINISHED",
            "FAILED",
            "KILLED"
          ]
        },
        "progress": {
          "description": "Required The numerical progress of the application, from 1 to 100.",
          "type": "number",
          "format": "float"
        },
        "trackingUrl": {
          "description": "Optional The HTTP URL of the ApplicationMaster, HistoryServer, or TimelineServer that provides application-specific information. The URL uses the internal hostname, and requires a proxy server for resolution and, possibly, access.",
          "type": "string"
        }
      }
    },
    "JobScheduling": {
      "id": "JobScheduling",
      "description": "Job scheduling options.Beta Feature: These options are available for testing purposes only. They may be changed before final release.",
      "type": "object",
      "properties": {
        "maxFailuresPerHour": {
          "description": "Optional Maximum number of times per hour a driver may be restarted as a result of driver terminating with non-zero code before job is reported failed.A job may be reported as thrashing if driver exits with non-zero code 4 times within 10 minute window.Maximum value is 10.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListJobsResponse": {
      "id": "ListJobsResponse",
      "description": "A list of jobs in a project.",
      "type": "object",
      "properties": {
        "jobs": {
          "description": "Output-only Jobs list.",
          "type": "array",
          "items": {
            "$ref": "Job"
          }
        },
        "nextPageToken": {
          "description": "Optional This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the page_token in a subsequent <code>ListJobsRequest<\/code>.",
          "type": "string"
        }
      }
    },
    "CancelJobRequest": {
      "id": "CancelJobRequest",
      "description": "A request to cancel a job.",
      "type": "object",
      "properties": {
      }
    },
    "DiagnoseClusterResults": {
      "id": "DiagnoseClusterResults",
      "description": "The location of diagnostic output.",
      "type": "object",
      "properties": {
        "outputUri": {
          "description": "Output-only The Google Cloud Storage URI of the diagnostic output. The output report is a plain text file with a summary of collected diagnostics.",
          "type": "string"
        }
      }
    },
    "ClusterOperationMetadata": {
      "id": "ClusterOperationMetadata",
      "description": "Metadata describing the operation.",
      "type": "object",
      "properties": {
        "clusterName": {
          "description": "Output-only Name of the cluster for the operation.",
          "type": "string"
        },
        "clusterUuid": {
          "description": "Output-only Cluster UUID for the operation.",
          "type": "string"
        },
        "status": {
          "description": "Output-only Current operation status.",
          "$ref": "ClusterOperationStatus"
        },
        "statusHistory": {
          "description": "Output-only The previous operation status.",
          "type": "array",
          "items": {
            "$ref": "ClusterOperationStatus"
          }
        },
        "operationType": {
          "description": "Output-only The operation type.",
          "type": "string"
        },
        "description": {
          "description": "Output-only Short description of operation.",
          "type": "string"
        },
        "labels": {
          "description": "Output-only Labels associated with the operation",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "warnings": {
          "description": "Output-only Errors encountered during operation execution.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ClusterOperationStatus": {
      "id": "ClusterOperationStatus",
      "description": "The status of the operation.",
      "type": "object",
      "properties": {
        "state": {
          "description": "Output-only A message containing the operation state.",
          "enumDescriptions": [
            "Unused.",
            "The operation has been created.",
            "The operation is running.",
            "The operation is done; either cancelled or completed."
          ],
          "type": "string",
          "enum": [
            "UNKNOWN",
            "PENDING",
            "RUNNING",
            "DONE"
          ]
        },
        "innerState": {
          "description": "Output-only A message containing the detailed operation state.",
          "type": "string"
        },
        "details": {
          "description": "Output-onlyA message containing any operation metadata details.",
          "type": "string"
        },
        "stateStartTime": {
          "description": "Output-only The time this state was entered.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "DiagnoseClusterOutputLocation": {
      "id": "DiagnoseClusterOutputLocation",
      "description": "The location where output from diagnostic command can be found.",
      "type": "object",
      "properties": {
        "outputUri": {
          "description": "Output-only The Google Cloud Storage URI of the diagnostic output. This will be a plain text file with summary of collected diagnostics.",
          "type": "string"
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Metadata describing the operation.",
      "type": "object",
      "properties": {
        "state": {
          "description": "A message containing the operation state.",
          "enumDescriptions": [
            "Unused.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed."
          ],
          "type": "string",
          "enum": [
            "UNKNOWN",
            "PENDING",
            "RUNNING",
            "DONE"
          ]
        },
        "innerState": {
          "description": "A message containing the detailed operation state.",
          "type": "string"
        },
        "details": {
          "description": "A message containing any operation metadata details.",
          "type": "string"
        },
        "insertTime": {
          "description": "The time that the operation was requested.",
          "type": "string",
          "format": "google-datetime"
        },
        "startTime": {
          "description": "The time that the operation was started by the server.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The time that the operation completed.",
          "type": "string",
          "format": "google-datetime"
        },
        "clusterName": {
          "description": "Name of the cluster for the operation.",
          "type": "string"
        },
        "clusterUuid": {
          "description": "Cluster UUId for the operation.",
          "type": "string"
        },
        "status": {
          "description": "Output-only Current operation status.",
          "$ref": "OperationStatus"
        },
        "statusHistory": {
          "description": "Output-only Previous operation status.",
          "type": "array",
          "items": {
            "$ref": "OperationStatus"
          }
        },
        "operationType": {
          "description": "Output-only The operation type.",
          "type": "string"
        },
        "description": {
          "description": "Output-only Short description of operation.",
          "type": "string"
        },
        "warnings": {
          "description": "Output-only Errors encountered during operation execution.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OperationStatus": {
      "id": "OperationStatus",
      "description": "The status of the operation.",
      "type": "object",
      "properties": {
        "state": {
          "description": "A message containing the operation state.",
          "enumDescriptions": [
            "Unused.",
            "The operation has been created.",
            "The operation is running.",
            "The operation is done; either cancelled or completed."
          ],
          "type": "string",
          "enum": [
            "UNKNOWN",
            "PENDING",
            "RUNNING",
            "DONE"
          ]
        },
        "innerState": {
          "description": "A message containing the detailed operation state.",
          "type": "string"
        },
        "details": {
          "description": "A message containing any operation metadata details.",
          "type": "string"
        },
        "stateStartTime": {
          "description": "The time this state was entered.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "regions": {
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "dataproc.projects.regions.operations.list",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/operations",
                  "httpMethod": "GET",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns UNIMPLEMENTED.NOTE: the name binding below allows API services to override the binding to use different resource name schemes, such as users\/*\/operations.",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation collection.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/regions\/[^\/]+\/operations$",
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "id": "dataproc.projects.regions.operations.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/regions\/[^\/]+\/operations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "id": "dataproc.projects.regions.operations.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED.",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/regions\/[^\/]+\/operations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "cancel": {
                  "id": "dataproc.projects.regions.operations.cancel",
                  "path": "v1/{+name}:cancel",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/regions\/[^\/]+\/operations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "clusters": {
              "methods": {
                "create": {
                  "id": "dataproc.projects.regions.clusters.create",
                  "path": "v1/projects/{projectId}/regions/{region}/clusters",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/clusters",
                  "httpMethod": "POST",
                  "description": "Creates a cluster in a project.",
                  "parameters": {
                    "projectId": {
                      "description": "Required The ID of the Google Cloud Platform project that the cluster belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "region"
                  ],
                  "request": {
                    "$ref": "Cluster"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "id": "dataproc.projects.regions.clusters.patch",
                  "path": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}",
                  "httpMethod": "PATCH",
                  "description": "Updates a cluster in a project.",
                  "parameters": {
                    "projectId": {
                      "description": "Required The ID of the Google Cloud Platform project the cluster belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "clusterName": {
                      "description": "Required The cluster name.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required Specifies the path, relative to <code>Cluster<\/code>, of the field to update. For example, to change the number of workers in a cluster to 5, the <code>update_mask<\/code> parameter would be specified as <code>config.worker_config.num_instances<\/code>, and the PATCH request body would specify the new value, as follows:\n{\n  \"config\":{\n    \"workerConfig\":{\n      \"numInstances\":\"5\"\n    }\n  }\n}\nSimilarly, to change the number of preemptible workers in a cluster to 5, the <code>update_mask<\/code> parameter would be <code>config.secondary_worker_config.num_instances<\/code>, and the PATCH request body would be set as follows:\n{\n  \"config\":{\n    \"secondaryWorkerConfig\":{\n      \"numInstances\":\"5\"\n    }\n  }\n}\n<strong>Note:<\/strong> Currently, <code>config.worker_config.num_instances<\/code> and <code>config.secondary_worker_config.num_instances<\/code> are the only fields that can be updated.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "clusterName"
                  ],
                  "request": {
                    "$ref": "Cluster"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "id": "dataproc.projects.regions.clusters.delete",
                  "path": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}",
                  "httpMethod": "DELETE",
                  "description": "Deletes a cluster in a project.",
                  "parameters": {
                    "projectId": {
                      "description": "Required The ID of the Google Cloud Platform project that the cluster belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "clusterName": {
                      "description": "Required The cluster name.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "clusterName"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "id": "dataproc.projects.regions.clusters.get",
                  "path": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}",
                  "httpMethod": "GET",
                  "description": "Gets the resource representation for a cluster in a project.",
                  "parameters": {
                    "projectId": {
                      "description": "Required The ID of the Google Cloud Platform project that the cluster belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "clusterName": {
                      "description": "Required The cluster name.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "clusterName"
                  ],
                  "response": {
                    "$ref": "Cluster"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "id": "dataproc.projects.regions.clusters.list",
                  "path": "v1/projects/{projectId}/regions/{region}/clusters",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/clusters",
                  "httpMethod": "GET",
                  "description": "Lists all regions\/{region}\/clusters in a project.",
                  "parameters": {
                    "projectId": {
                      "description": "Required The ID of the Google Cloud Platform project that the cluster belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional A filter constraining the clusters to list. Filters are case-sensitive and have the following syntax:field = value AND field = value ...where field is one of status.state, clusterName, or labels.[KEY], and [KEY] is a label key. value can be * to match all values. status.state can be one of the following: ACTIVE, INACTIVE, CREATING, RUNNING, ERROR, DELETING, or UPDATING. ACTIVE contains the CREATING, UPDATING, and RUNNING states. INACTIVE contains the DELETING and ERROR states. clusterName is the name of the cluster provided at creation time. Only the logical AND operator is supported; space-separated items are treated as having an implicit AND operator.Example filter:status.state = ACTIVE AND clusterName = mycluster AND labels.env = staging AND labels.starred = *",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional The standard List page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional The standard List page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "region"
                  ],
                  "response": {
                    "$ref": "ListClustersResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "diagnose": {
                  "id": "dataproc.projects.regions.clusters.diagnose",
                  "path": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:diagnose",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:diagnose",
                  "httpMethod": "POST",
                  "description": "Gets cluster diagnostic information. After the operation completes, the Operation.response field contains DiagnoseClusterOutputLocation.",
                  "parameters": {
                    "projectId": {
                      "description": "Required The ID of the Google Cloud Platform project that the cluster belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "clusterName": {
                      "description": "Required The cluster name.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "clusterName"
                  ],
                  "request": {
                    "$ref": "DiagnoseClusterRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "jobs": {
              "methods": {
                "submit": {
                  "id": "dataproc.projects.regions.jobs.submit",
                  "path": "v1/projects/{projectId}/regions/{region}/jobs:submit",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/jobs:submit",
                  "httpMethod": "POST",
                  "description": "Submits a job to a cluster.",
                  "parameters": {
                    "projectId": {
                      "description": "Required The ID of the Google Cloud Platform project that the job belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "region"
                  ],
                  "request": {
                    "$ref": "SubmitJobRequest"
                  },
                  "response": {
                    "$ref": "Job"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "id": "dataproc.projects.regions.jobs.get",
                  "path": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}",
                  "httpMethod": "GET",
                  "description": "Gets the resource representation for a job in a project.",
                  "parameters": {
                    "projectId": {
                      "description": "Required The ID of the Google Cloud Platform project that the job belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "jobId": {
                      "description": "Required The job ID.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "jobId"
                  ],
                  "response": {
                    "$ref": "Job"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "id": "dataproc.projects.regions.jobs.list",
                  "path": "v1/projects/{projectId}/regions/{region}/jobs",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/jobs",
                  "httpMethod": "GET",
                  "description": "Lists regions\/{region}\/jobs in a project.",
                  "parameters": {
                    "projectId": {
                      "description": "Required The ID of the Google Cloud Platform project that the job belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional The number of results to return in each response.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional The page token, returned by a previous call, to request the next page of results.",
                      "location": "query",
                      "type": "string"
                    },
                    "clusterName": {
                      "description": "Optional If set, the returned jobs list includes only jobs that were submitted to the named cluster.",
                      "location": "query",
                      "type": "string"
                    },
                    "jobStateMatcher": {
                      "description": "Optional Specifies enumerated categories of jobs to list (default = match ALL jobs).",
                      "location": "query",
                      "type": "string",
                      "enum": [
                        "ALL",
                        "ACTIVE",
                        "NON_ACTIVE"
                      ]
                    },
                    "filter": {
                      "description": "Optional A filter constraining the jobs to list. Filters are case-sensitive and have the following syntax:field = value AND field = value ...where field is status.state or labels.[KEY], and [KEY] is a label key. value can be * to match all values. status.state can be either ACTIVE or INACTIVE. Only the logical AND operator is supported; space-separated items are treated as having an implicit AND operator.Example filter:status.state = ACTIVE AND labels.env = staging AND labels.starred = *",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "region"
                  ],
                  "response": {
                    "$ref": "ListJobsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "id": "dataproc.projects.regions.jobs.patch",
                  "path": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}",
                  "httpMethod": "PATCH",
                  "description": "Updates a job in a project.",
                  "parameters": {
                    "projectId": {
                      "description": "Required The ID of the Google Cloud Platform project that the job belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "jobId": {
                      "description": "Required The job ID.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required Specifies the path, relative to <code>Job<\/code>, of the field to update. For example, to update the labels of a Job the <code>update_mask<\/code> parameter would be specified as <code>labels<\/code>, and the PATCH request body would specify the new value. <strong>Note:<\/strong> Currently, <code>labels<\/code> is the only field that can be updated.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "jobId"
                  ],
                  "request": {
                    "$ref": "Job"
                  },
                  "response": {
                    "$ref": "Job"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "cancel": {
                  "id": "dataproc.projects.regions.jobs.cancel",
                  "path": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}:cancel",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}:cancel",
                  "httpMethod": "POST",
                  "description": "Starts a job cancellation request. To access the job resource after cancellation, call regions\/{region}\/jobs.list or regions\/{region}\/jobs.get.",
                  "parameters": {
                    "projectId": {
                      "description": "Required The ID of the Google Cloud Platform project that the job belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "jobId": {
                      "description": "Required The job ID.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "jobId"
                  ],
                  "request": {
                    "$ref": "CancelJobRequest"
                  },
                  "response": {
                    "$ref": "Job"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "id": "dataproc.projects.regions.jobs.delete",
                  "path": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}",
                  "httpMethod": "DELETE",
                  "description": "Deletes the job from the project. If the job is active, the delete fails, and the response returns FAILED_PRECONDITION.",
                  "parameters": {
                    "projectId": {
                      "description": "Required The ID of the Google Cloud Platform project that the job belongs to.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "description": "Required The Cloud Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "jobId": {
                      "description": "Required The job ID.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "jobId"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}